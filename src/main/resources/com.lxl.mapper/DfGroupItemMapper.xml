<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lxl.dao.DfGroupItemMapper" >
  <resultMap id="BaseResultMap" type="com.lxl.beans.po.DfGroupItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="groupid" property="groupid" jdbcType="INTEGER" />
    <result column="itemid" property="itemid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_require" property="isRequire" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lxl.beans.po.DfGroupItem" extends="BaseResultMap" >
    <result column="show_data" property="showData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, groupid, itemid, type, is_require
  </sql>
  <sql id="Blob_Column_List" >
    show_data
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from df_group_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from df_group_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lxl.beans.po.DfGroupItem" >
    insert into df_group_item (id, groupid, itemid, 
      type, is_require, show_data
      )
    values (#{id,jdbcType=INTEGER}, #{groupid,jdbcType=INTEGER}, #{itemid,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{isRequire,jdbcType=INTEGER}, #{showData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lxl.beans.po.DfGroupItem" >
    insert into df_group_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="itemid != null" >
        itemid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isRequire != null" >
        is_require,
      </if>
      <if test="showData != null" >
        show_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="itemid != null" >
        #{itemid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="isRequire != null" >
        #{isRequire,jdbcType=INTEGER},
      </if>
      <if test="showData != null" >
        #{showData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lxl.beans.po.DfGroupItem" >
    update df_group_item
    <set >
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="itemid != null" >
        itemid = #{itemid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="isRequire != null" >
        is_require = #{isRequire,jdbcType=INTEGER},
      </if>
      <if test="showData != null" >
        show_data = #{showData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lxl.beans.po.DfGroupItem" >
    update df_group_item
    set groupid = #{groupid,jdbcType=INTEGER},
      itemid = #{itemid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      is_require = #{isRequire,jdbcType=INTEGER},
      show_data = #{showData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lxl.beans.po.DfGroupItem" >
    update df_group_item
    set groupid = #{groupid,jdbcType=INTEGER},
      itemid = #{itemid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      is_require = #{isRequire,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>